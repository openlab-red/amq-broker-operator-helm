{{- range $index, $acceptor := .Values.acceptors }}
{{- with $ }}
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "amq-broker.fullname" . }}-{{ $acceptor.name }}-producer
  labels:
    {{- include "amq-broker.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "{{ sub $index 1 }}"
spec:
  containers:
  - name: artemis-producer
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
    imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
    env:
      - name: ARTEMIS_USER
        value: {{ default "" .Values.adminUser | quote }}
      - name: ARTEMIS_PASSWORD
        value: {{ default "" .Values.adminPassword | quote }}
      {{- if $acceptor.expose }}
      - name: ARTEMIS_HOST
        value: {{ include "amq-broker.fullname" . }}-{{ $acceptor.name }}-0-svc
      {{ else }}
      - name: ARTEMIS_HOST
        value: {{ include "amq-broker.fullname" . }}-hdls-svc  
      {{- end }}
      {{- if eq $acceptor.protocols "all" }}
      - name: ARTEMIS_PROTOCOL
        value: "core"
      {{ else }}
      - name: ARTEMIS_PROTOCOL
        value: {{ $acceptor.protocols }}   
      {{- end }}     
    command:
        - /bin/bash
        - '-c'
        - |
          #!/bin/bash
          
          /opt/amq/bin/artemis producer --user ${ARTEMIS_USER} --password ${ARTEMIS_PASSWORD} --message-count 10 --protocol=${ARTEMIS_PROTOCOL} --url="tcp://${ARTEMIS_HOST}:{{ $acceptor.port }}
          {{- if $acceptor.sslEnabled -}}
          ?sslEnabled=true;trustStorePath=/opt/pki/{{ .name }}/client.ts;trustStorePassword={{ .Values.pki.trustStorePassword }}"
          {{- else -}}
          "
          {{ end }}
  {{- if $acceptor.sslEnabled }}
    volumeMounts:
    - name: {{ $acceptor.name }}
      mountPath: /opt/pki/{{ .name }} 
  volumes:
  - name: {{ $acceptor.name }}
    secret:
      secretName: {{ include "amq-broker.fullname" . }}-{{ $acceptor.name }}-secret
  {{- end }}
  restartPolicy: Never
{{- end }}
{{- end }}